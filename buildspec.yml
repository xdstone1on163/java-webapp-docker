version: 0.2

env:
  variables:
    REGISTRY: "116345098631.dkr.ecr.ap-southeast-1.amazonaws.com"
    EKS_KUBECTL_ROLE_ARN: "arn:aws:iam::116345098631:role/EksCodeBuildKubectlRole"
    EKS_CLUSTER_NAME: "interview-demo-1"

phases:
  pre_build:
    commands:
      # Verify AWS CLI Version
      - echo "Verify AWS CLI Version..."
      - aws --version
      # Login to ECR Registry for docker to push the image to ECR Repository
      - echo "Login in to Amazon ECR..."
      - aws ecr get-login-password --region ap-southeast-1 | docker login --username AWS --password-stdin $REGISTRY
  build:
    commands:
      - echo docker build    
      #- docker build -t $REGISTRY/simplewebapp:latest .
  post_build:
    commands:
      - echo docker push
      #- docker push $REGISTRY/simplewebapp:latest
      # Extracting AWS Credential Information using STS Assume Role for kubectl
      - echo "Setting Environment Variables related to AWS CLI for Kube Config Setup"          
      - CREDENTIALS=$(aws sts assume-role --role-arn $EKS_KUBECTL_ROLE_ARN --role-session-name codebuild-kubectl --duration-seconds 900)
      - export AWS_ACCESS_KEY_ID="$(echo ${CREDENTIALS} | jq -r '.Credentials.AccessKeyId')"
      - export AWS_SECRET_ACCESS_KEY="$(echo ${CREDENTIALS} | jq -r '.Credentials.SecretAccessKey')"
      - export AWS_SESSION_TOKEN="$(echo ${CREDENTIALS} | jq -r '.Credentials.SessionToken')"
      - export AWS_EXPIRATION=$(echo ${CREDENTIALS} | jq -r '.Credentials.Expiration')
      - aws eks update-kubeconfig --name $EKS_CLUSTER_NAME
      - cat /root/.kube/config
      - kubectl get svc
